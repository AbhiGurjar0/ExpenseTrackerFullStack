<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expenses Report</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f3f4f6;
            margin: 0;
            padding: 20px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #1f2937;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            background: #fff;
            border-radius: 8px;
            overflow: hidden;
        }

        th,
        td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }

        th {
            background: #2563eb;
            color: #fff;
        }

        tr:nth-child(even) {
            background: #f9fafb;
        }

        tr:hover {
            background: #e0f2fe;
        }

        .pagination {
            text-align: center;
            margin-top: 20px;
        }

        .pagination button {
            padding: 8px 16px;
            margin: 0 5px;
            background: #2563eb;
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }

        .pagination button:disabled {
            background: #94a3b8;
            cursor: not-allowed;
        }

        .page-info {
            margin-top: 10px;
            text-align: center;
            color: #374151;
        }
    </style>
</head>

<body>

    <h1>Expenses Report</h1>

    <table id="expenses-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Description</th>
                <th>Category</th>
                <th>Income</th>
                <th>Expense</th>
            </tr>
        </thead>
        <tbody>
            <!-- Expenses rows will be inserted here by JS -->
        </tbody>
    </table>

    <div class="pagination">
        <button id="prevBtn">Previous</button>
        <button id="nextBtn">Next</button>
    </div>
    <div class="page-info" id="pageInfo"></div>

    <script>

        let expenses = [];
        const rowsPerPage = 10;
        let currentPage = 1;
        const tableBody = document.querySelector('#expenses-table tbody');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const pageInfo = document.getElementById('pageInfo');

        function renderTable() {
            tableBody.innerHTML = '';
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            const pageItems = expenses.slice(start, end);

            pageItems.forEach(exp => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                <td>${exp.date}</td>
                <td>${exp.title}</td>
                <td>${exp.category}</td>
                <td>${exp.income.toFixed(2)}</td>
                <td>${exp.expense.toFixed(2)}</td>
            `;
                tableBody.appendChild(tr);
            });

            prevBtn.disabled = currentPage === 1;
            nextBtn.disabled = currentPage === Math.ceil(expenses.length / rowsPerPage);


            pageInfo.textContent = `Page ${currentPage} of ${Math.ceil(expenses.length / rowsPerPage)}`;
        }

        prevBtn.addEventListener('click', () => {
            if (currentPage > 1) currentPage--;
            renderTable();
        });

        nextBtn.addEventListener('click', () => {
            if (currentPage < Math.ceil(expenses.length / rowsPerPage)) currentPage++;
            renderTable();
        });

        async function getData() {
            try {


                let data = await fetch('/api/report')
                data = await data.json();
                expenses = data.daywiseExp.map(exp => ({
                    date: new Date(exp.date).toLocaleDateString(),
                    title: exp.title,
                    category: 'Expense',
                    income: 0,
                    expense: exp.amount
                })).concat(data.daywiseIncome.map(inc => ({
                    date: new Date(inc.date).toLocaleDateString(),
                    title: inc.title,
                    category: 'Income',
                    income: inc.amount,
                    expense: 0
                })));
                renderTable();
            } catch (error) {
                console.error('Error fetching daily expenses:', error);
                expenses = [];
                renderTable();
            }
        }

        getData();
    </script>

</body>

</html>